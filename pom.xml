<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- SpringBOOT un versiyonlarına ve configurationlarına ilişkin bilgilerdir. Spring in bir
	 POM u varmışta (Parent POM) Maven ın pom.xml ini yönetiyormuş gibi düşün-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- Projeye ilişkin bilgiler -->
	<groupId>com.example.crudlibrary</groupId>
	<artifactId>CrudLibrary</artifactId>
	<version>1.0.0</version>
	<description>CrudLibrary with SpringBOOT</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<!-- Maven JAR Library çıkaracağım için SpringBOOT' a ilişkin dependency leri
		 projeden kaldırıyorum.-->
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>-->
	</dependencies>

	<build>
		<plugins>
			<!-- SpringBOOT a ilişkin Spring BOOT Executable JAR çıkartmak istiyorsak
			 aşağıdaki plugin i kullanabiliriz. Fakat Maven Project yerine Spring projesi üzerinden
			 Maven JAR Library çıkaracağız. Bundan dolayı Spring BOOT a ilişkin configurationların
			 gelmesini istemiyorsak "spring-boot-maven-plugin" i kaldırmalıyız.-->
			<!--<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
		</plugins>
	</build>

</project>
